{"version":3,"sources":["Components/AddCategory.js","Components/EmojiGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","EmojiGrid","category","images","setImages","useEffect","getEmoji","a","url","encodeURI","fetch","resp","json","data","emojis","map","img","id","grupo","slug","title","downsized_medium","console","log","src","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2LAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBQ,SAACP,GACjBF,EAAcE,EAAEQ,OAAOF,a,uBCLlBG,EAAY,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAEvB,EAA4Bd,mBAAS,IAArC,mBAAOe,EAAP,KAAeC,EAAf,KAEAC,qBAAW,WACPC,MACD,IAEH,IAAMA,EAAQ,uCAAG,kCAAAC,EAAA,6DACPC,EADO,iDACyCC,UAAUP,GADnD,+DAEMQ,MAAMF,GAFZ,cAEPG,EAFO,gBAGMA,EAAKC,OAHX,YAGPC,EAHO,yBAMHC,EAASD,EAAKA,KAAKE,KAAI,SAACC,GAAS,IAAD,EAClC,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIG,KACXC,MAAOJ,EAAII,MACXZ,IAAG,UAAEQ,EAAIb,cAAN,aAAE,EAAYkB,iBAAiBb,QAI1Cc,QAAQC,IAAIT,GACZV,EAAUU,GAhBD,8FAAH,qDAsBd,OACI,8BACI,+BACA,6BAAKZ,IAEDC,EAAOY,KAAI,SAAAC,GAAG,OACV,+BACI,4BAAIA,EAAII,QACR,qBAAKI,IAAKR,EAAIR,QAFTQ,EAAIC,aClCpBQ,EAAe,WAExB,MAAoCrC,mBAAS,IAA7C,mBAAOsC,EAAP,KAAmBvC,EAAnB,KAEA,OACI,qCACI,0CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQuC,EAAWX,KAAI,SAAAb,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YCbjCyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8d8690e9.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const inputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats])\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={inputChange}\r\n            >\r\n            </input>\r\n        </form>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nexport const EmojiGrid = ({category}) => {\r\n\r\n    const [images, setImages] = useState([])\r\n\r\n    useEffect (() => {\r\n        getEmoji();\r\n    }, [])\r\n\r\n    const getEmoji = async() => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=15&api_key=Pu5pRJvL6aWR9TATxBCWb8aSMhiZ3aca`;\r\n        const resp = await fetch(url);\r\n        const data = await resp.json();\r\n\r\n        if (data) {\r\n            const emojis = data.data.map((img) => {\r\n                return {\r\n                    id: img.id,\r\n                    grupo: img.slug,\r\n                    title: img.title,\r\n                    url: img.images?.downsized_medium.url,\r\n                }\r\n            })\r\n        \r\n            console.log(emojis);\r\n            setImages(emojis)\r\n        }else {\r\n            return\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ol>\r\n            <h3>{category}</h3>\r\n            {\r\n                images.map(img => (\r\n                    <li key={img.id}>\r\n                        <p>{img.title}</p>\r\n                        <img src={img.url}></img>\r\n                    </li>\r\n                ))\r\n            }\r\n            </ol>\r\n        </ div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './Components/AddCategory'\r\nimport { EmojiGrid } from './Components/EmojiGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState([])\r\n\r\n    return (\r\n        <>\r\n            <h1>EmojiApp</h1>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <EmojiGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}